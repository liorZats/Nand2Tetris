// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
	//Mux(in=in, sel=sel[2], a=ao, b=bo);
	//Dmux4Way(in=ao, sel[0]=sel[0],sel[1]=sel[1], a=a, b=b, c=c, d=d);
	//Dmux4Way(in=bo, sel[0]=sel[0],sel[1]=sel[1] a=e, b=f, c=g, d=h);
    //DMux(in=in, sel=sel[2], a=c1, b=c2);
    //DMux4Way(in=c1, sel[0]=sel[0], sel[1]=sel[1], a=a, b=b, c=c, d=d);
    //DMux4Way(in=c2, sel[0]=sel[0], sel[1]=sel[1], a=e, b=f, c=g, d=h);
	DMux(in=in,sel=sel[2],a=ao,b=bo);
	DMux(in=ao,sel=sel[1],a=aoo,b=boo);
	DMux(in=bo,sel=sel[1],a=coo,b=doo);

	DMux(in=aoo,sel=sel[0],a=a,b=b);
	DMux(in=boo,sel=sel[0],a=c,b=d);
	DMux(in=coo,sel=sel[0],a=e,b=f);
	DMux(in=doo,sel=sel[0],a=g,b=h);


}